name: 'Tag new version'

on:
  workflow_call:
    secrets:
      DEPLOY_KEY:
        required: true
        description: 'Create a Deploy Key and pass a private key here, so the push of the tag will trigger the builds, based on it.'

permissions:
  contents: write

jobs:
  new-tag:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ssh-key: ${{ secrets.deploy_key }}

      - name: Create version tag
        run: |
          patchChangesTypes='fix|build|chore|docs|ci|refactor|test'
          
          function latestVersion() {
            git describe --tags --match 'v*' --abbrev=0
          }
            
          function aheadLatestVersion() {
            git describe --tags --match 'v*' --long | cut -d '-' -f2
          }
          
          function isPatch() {
            git --no-pager  log --pretty="format:%s" HEAD..."$1" | grep -cE "^($patchChangesTypes){1}(\([[:alnum:]._-]+\))?(!)?:.*"
          }
          
          ## ensure we have tags
          git fetch --force --tags
          {
            rawVersion=$(latestVersion)
          } || {
            git tag v0.0.0
            echo "New version v0.0.0 tag created"
            exit
          }
          version=${rawVersion:1}
          patch=$(echo "$version" | cut -d '.' -f3)
          minor=$(echo "$version" | cut -d '.' -f2)
          major=$(echo "$version" | cut -d '.' -f1)
            
          if (($(aheadLatestVersion) == 0)); then
            echo "Already at the latest version tag, not doing anything"
            exit 0
          fi
            
          if (($(isPatch "$rawVersion") > 0)); then
            nextVersion="v$major.$minor.$((patch+1))"
          else
            nextVersion="v$major.$((minor+1)).0"
          fi
          
          git tag "$nextVersion"

      - name: Push new tag
        run: git push --tags
